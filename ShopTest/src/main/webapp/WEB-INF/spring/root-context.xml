<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.1.xsd
		http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
	
	<!-- Root Context: defines shared resources visible to all other web components -->
		
		<!--테이션을 적용한다.-->
<context:annotation-config/>

<!--스캔 어노테이션을 적용한다.-->

<!-- method 속성값인 clone 명령어는 데이터베이스의 자원을 복제하여 연결 시간을 단축한다.-->
<bean class="org.springframework.jdbc.datasource.DriverManagerDataSource" id="dataSource" destroy-method="clone">
<property name="driverClassName" value="oracle.jdbc.OracleDriver"/>
<property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe"/>
<property name="username" value="scott"/>
<property name="password" value="tiger"/>
</bean>

<!--팩토리에서 Bean 객체로 호출한 결과를 반환한다.-->
<bean class="org.mybatis.spring.SqlSessionFactoryBean" id="sqlSessionFactoryBean">
<property name="dataSource" ref="dataSource"/>

<!--Configuration 설정 파일을 연결한다.-->
<property name="configLocation" value="classpath:/configuration/config.xml"/>

<!-- Mapper 설정 파일을 연결한다.-->
<property name="mapperLocations" value="classpath:/mapper/*Mapper.xml"/>
</bean>

<!-- SqlSession 인터페이스의 인스턴스를 대체하여 데이터베이스의 SQL 명령어를 실행한다.-->
<bean class="org.mybatis.spring.SqlSessionTemplate" id="sqlSessionTemplate">
<constructor-arg ref="sqlSessionFactoryBean"/>
</bean>

<context:component-scan base-package="com.kubg.dao"/>
<context:component-scan base-package="com.kubg.service"/>
<context:component-scan base-package="com.kubg.dto"/>
<context:component-scan base-package="com.kubg.utils"/>

<!--트랜잭션 매니저를 설정한다.-->
<bean class="org.springframework.jdbc.datasource.DataSourceTransactionManager" id="transactionManager">
<property name="dataSource" ref="dataSource"/>
</bean>

<!--@Transactional 어노테이션을 사용할 수 있도록 설정한다.-->
<tx:annotation-driven transaction-manager="transactionManager"/> 
		
</beans>
